Задачки для собеседований:
1.	задача:		проверить строку на правильность расставленных скобок
	условия:	скобки могут быть разными
	решение:	пройти по строке, каждую найденную открывающую скобку закидывать в стек, каждую новую закрывающую скобку проверять на на соответствие последней в стеке скобки и если та такая же только открывающая — удалять обе, если нет — закидывать в стек. Строка правильная, если по завершении обхода строки стек пуст.
2.	задача:		поверить, что облако точек на графике симметрично по вертикальной оси.
	условия:	дан двухмерный массив координат точек Nx2 ([[x1,y1],[x2,y2]...[xn,yn]])
	решение:	перегнать массив в в словарь где y будет ключом, а значением будет массив x соответствующих этому y. пойти по словарю на каждом шаге сортируя массив x и проходя его до половины записывая в переменную среднее арифметическое текущего символа и симметричного символа с конца массива. Если при перезаписи переменной со средним арифметическим записываемое значение будет отличаться от текущего — возвращаем False.
3.	задача:		записать путь спирального обхода матрицы из центра к краю.
	условия:	имеется матрица размерности n2+1 x n2+1. Двигаться по часовой стрелке.
	решение:	найти центр матрицы. Нужно вычислить все точки где нужно поворачивать.
4.	задача:		посчитать сумму всех узлов в дереве до определённой глубины.
	условия:	имеется дерево (записанное произвольным образом), массив целых чисел описывающий глубины до которых нужно вычислить сумму узлов.
	решение:	определить для каждого узла дерева его глубину. Отсортировать массив с глубинами по убыванию. Найти вершину с глубиной, соответствующей максимальной глубине из массива глубин и пойти вверх по дереву на каждом шагу прибавляя к переменной результата количество значений из массива глубин меньших или равных текущей глубине.
5.	задача:		найти наименьший модуль разностей двух элементов в двух массивах.
	условия:	имеется два массива целых чисел. Элементы, разность которых нужно найти, обязательно должны быть из разных массивов.
	решение:	отсортировать оба массива по возрастанию. Для каждого элемента первого массива искать (поиск начинается с индекса сохранённого предыдущей итерацией или нуля) во втором массиве большее число и найдя его, сравнить модуль разности его и предыдущего при этом запоминаем меньший модуль разности и индекс предыдущего числа. Если большего числа во втором массиве не найдено, останавливаем поиск и возвращаем модуль разности минимального числа из первого массива и максимального числа из второго.
6.	задача:		заменить в строке все группы идущих подряд пробелов на один пробел не используя дополнительную память.
	условия:	дана строка или массив символов. Вернуть новую длину строки.
	решение:	(для массива символов) обходим массив, при обнаружении пробела проверяем на наличие пробела предыдущий элемент и при наличии там пробела инкриментируем целочисленную переменную хранящую отступ после чего (во всех случаях) копируем значение текущего индекса в массиве в индекс на отступ меньше. После обхода вернуть начальную длину строки минус отступ.
7.	задача:		вернуть строку с заменёнными последовательностями символов на один символ и число его повторений в последовательности
	условие:	даётся строка. В случае последовательности из одного символа число не пишется.
	решение:	обходится строка, если текущий индекс больше нуля и предыдущий символ такой же как текущий предыдущий символ добавляется в результирующую строку со значением счётчика если счётчик больше нуля, счётчик сбрасывается. После обхода строки результат дополняется последним символом со значением счётчика и возвращается.
8.	задача:	вернуть список всех парных чисел из двух массивов
	условие:	имеется два не сортированных массива целых чисел случайной длины. Вернуть массив с числами, встречающимися как в первом, так и во втором массивах.
	решение:	решение основано на алгоритме сортировки слиянием.
9.	задача:		